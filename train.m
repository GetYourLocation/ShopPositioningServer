addpath('./util/');

trainData = readTable('data/train.csv');
trainData.imageFilename = fullfile(pwd(), 'data', 'JPEGImages', trainData.imageFilename);

% Set layers
imageinput = imageInputLayer([32, 32, 3], ...
    'DataAugmentation', 'none', ...
    'Normalization', 'zerocenter');

conv_1 = convolution2dLayer(3, 32, ...
    'Stride', 1, ...
    'Padding', 1, ...
    'NumChannels', 3, ...
    'WeightLearnRateFactor', 1, ...
    'WeightL2Factor', 1, ...
    'BiasLearnRateFactor', 1, ... 
    'BiasL2Factor', 0);

relu_1 = reluLayer();

conv_2 = convolution2dLayer(3, 32, ...
    'Stride', 1, ...
    'Padding', 1, ...
    'NumChannels', 32, ...
    'WeightLearnRateFactor', 1, ...
    'WeightL2Factor', 1, ...
    'BiasLearnRateFactor', 1, ...
    'BiasL2Factor', 0);

relu_2 = reluLayer();

maxpool = maxPooling2dLayer(3, ...
    'Stride', 2, ...
    'Padding', 0);

fc_1 = fullyConnectedLayer(64, ...
    'WeightLearnRateFactor', 1, ...
    'WeightL2Factor', 1, ...
    'BiasLearnRateFactor', 1, ...
    'BiasL2Factor', 0);

relu_3 = reluLayer();

fc_2 = fullyConnectedLayer(2, ...
    'WeightLearnRateFactor', 1, ...
    'WeightL2Factor', 1, ...
    'BiasLearnRateFactor', 1, ...
    'BiasL2Factor', 0);

sm = softmaxLayer();

classoutput = classificationLayer();

layers = [ ...
    imageinput
    conv_1
    relu_1
    conv_2
    relu_2
    maxpool
    fc_1
    relu_3
    fc_2
    sm
    classoutput];

% Set Weights and Bias
layers(2).Weights = randn([3 3 3 32]) * 0.0001;
layers(4).Weights = randn([3 3 32 32]) * 0.0001;
layers(7).Weights = randn([64 7200]) * 0.0001;
layers(9).Weights = randn([2 64]) * 0.0001;
layers(2).Bias = randn([1 1 32]) * 0.0001;
layers(4).Bias = randn([1 1 32]) * 0.0001;
layers(7).Bias = randn([64 1]) * 0.0001;
layers(9).Bias = randn([2 1]) * 0.0001;

% Training options
options = trainingOptions('sgdm', ...
    'InitialLearnRate', 1e-6, ...
    'MaxEpochs', 1, ...
    'CheckpointPath', tempdir);

% Train detector
detector = trainFasterRCNNObjectDetector(trainData, layers, options)

% Predict
img = imread('data/test_1.jpg');
% img = imread('data/test_2.jpg');
[bbox, score, label] = detect(detector, img);
detectedImg = insertShape(img, 'Rectangle', bbox);
figure;
imshow(detectedImg);
